func firstMissingPositive(nums []int) int {
	for i := 0; i < len(nums); i++ {
		for nums[i] != i+1 && nums[i] > 0 && nums[i] <= len(nums) && nums[nums[i]-1] != nums[i] {
			nums[i], nums[nums[i]-1] = nums[nums[i]-1], nums[i]
		}
	}
	for k, v := range nums {
		if v != k+1 {
			return k+1
		}
	}

	return len(nums)+1








}
//func firstMissingPositive(nums []int) int {
//	for i := 0; i < len(nums); i++ {
//		for nums[i] > 0 && nums[i] <= len(nums) && nums[nums[i]-1] != nums[i] {
//			nums[i], nums[nums[i]-1] = nums[nums[i]-1], nums[i]
//		}
//	}
//	for i := 0; i < len(nums); i++ {
//		if nums[i] != i + 1 {
//			return i + 1
//		}
//	}
//	return len(nums)+1
//}

//runtime:116 ms
//memory:24.7 MB
